// using static array
#include<stdio.h>
#include<stdlib.h>
#define CAPACITY 5 //preprocessor macros, it will execute before copilation
#include<conio.h>
int stack[CAPACITY], top=-1;
void push(int); //defing prototype
int pop();
int isFull();
int isEmpty();
void traverse();
void peek();

void main()
{
    int ch, item;
    clrscr();
    while(1)
    {
	printf("1. Push \n");
	printf("2. Pop \n");
	printf("3. Peek \n");
	printf("4. Traverse \n");
	printf("5. Quit \n");

	printf("Enter your choice: ");
	scanf("%d",&ch);

	switch(ch)
	{
	    case 1:
			printf("Enter element : ");
			scanf("%d",&item);
			push(item);
			break;

	    case 2:
			item=pop();
			if(item==0)
			{
			    printf("Stack is underflow \n");
			}

			else
			{
			    printf("Deleteed item %d\n",item);
			}

			break;
	    case 3: peek(); break;
	    case 4: traverse(); break;
	    case 5: exit(0); break;
	    default: printf("Please enter correct choice \n\n");
	}
    }

}

void push(int ele) //void, bcz it is not returning anything
{
    if(isFull())
    {
	printf("stack is full \n");
    }
    else
    {
	top++;
	stack[top]=ele;
	printf("%d pushed \n", ele);
    }
}

int isFull()
{
    if(top==CAPACITY-1)
    {
	return 1;
    }
    else
    {
	return 0;
    }
}



int pop() //returning int value
{
    if(isEmpty())
    {
	return 0; //stack is underflow
    }
    else
    {
	return stack[top--];
	//--top; yeh return ke baad execute nahi hoga, so put in return`
    }
}

int isEmpty()
{
    if(top==-1)
    {
	return 1;
    }
    else
    {
	return 0;
    }
}

void peek()
{
    if(isEmpty())
	printf("Stack is Empty \n");
    else
	printf("Peek element is %d \n",stack[top]);
}


void traverse()
{
    if(isEmpty())
	printf("stack is empty \n");
    else
    {
	printf("Elements of stack are: \n");
	int i;
	for(i=0;i<=top;i++)
	{
	    printf("%d\t\n", stack[i]);
	}
    }
}
